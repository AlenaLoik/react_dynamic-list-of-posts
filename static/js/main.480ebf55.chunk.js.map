{"version":3,"sources":["components/User.tsx","components/Comment.tsx","components/CommentList.tsx","components/Post.tsx","components/PostList.tsx","components/api.ts","App.tsx","index.tsx"],"names":["User","name","email","address","className","street","suite","city","Comment","body","CommentList","comments","map","comment","key","id","Post","title","userInfo","PostList","posts","useState","filterPosts","setFilter","serchKeyword","setKeyword","viewPosts","useMemo","pattern","RegExp","filter","test","setFilterPostsDebounce","useCallback","debounce","value","type","placeholder","onChange","event","target","xmlns","role","aria-hidden","viewBox","focusable","data-icon","data-prefix","fill","d","length","post","user","API_URL","App","setPosts","isLoaded","setLoaded","isLoading","setLoading","onClick","setTimeout","preperedPosts","Promise","all","fetch","then","response","json","users","postId","find","userId","loadAllPosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.480ebf55.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n  email: string;\n  address: {\n    street: string;\n    suite: string;\n    city: string;\n  };\n}\n\nexport const User: React.FC<Props> = ({ name, email, address }) => (\n  <section className=\"user__info\">\n    <h3>about autor:</h3>\n    <p><strong>{name}</strong></p>\n    <h4>email:</h4>\n    <p>{email}</p>\n    <h4>adress:</h4>\n    <p>\n      {address.street}\n      ,\n      {' '}\n      {' '}\n      {address.suite}\n      ,\n      {' '}\n      {address.city}\n    </p>\n  </section>\n);\n","import React from 'react';\n\ntype Props = {\n  name: string;\n  email: string;\n  body: string;\n}\n\nexport const Comment: React.FC<Props> = ({ name, email, body }) => (\n  <div className=\"comment\">\n    <h4>name: </h4>\n    <p>{name}</p>\n    <h4> email: </h4>\n    <p>{email}</p>\n    <section className=\"commet__text\">\n      <h4> comment: </h4>\n      <p>{body}</p>\n    </section>\n  </div>\n);\n","import React from 'react';\nimport { Comment } from './Comment';\nimport { IComment } from './interface';\n\ntype Props = {\n  comments: IComment[];\n};\n\nexport const CommentList: React.FC<Props> = ({ comments }) => (\n  <section className=\"comments\">\n    <h3>Comments:</h3>\n    {comments.map(comment => (\n      <Comment {...comment} key={comment.id} />\n    ))}\n  </section>\n);\n","import React from 'react';\nimport { User } from './User';\nimport { CommentList } from './CommentList';\nimport { IUser, IComment } from './interface';\n\ntype Props = {\n  title: string;\n  body: string;\n  userInfo: IUser;\n  comments: IComment[];\n};\n\nexport const Post: React.FC<Props> = ({ title, body, userInfo, comments }) => (\n  <>\n    <div className=\"article__content\">\n      <h2 className=\"article__title\">{title}</h2>\n      <p className=\"article__text\">{body}</p>\n      <User {...userInfo} />\n    </div>\n    <div className=\"article__comments\">\n      <CommentList comments={comments} />\n    </div>\n  </>\n);\n","import React, { useState, useMemo, useCallback } from 'react';\nimport { Post } from './Post';\nimport { IPostsUpdate } from './interface';\nimport debounce from 'lodash.debounce';\n\ntype Props = {\n  posts: IPostsUpdate[];\n};\n\nexport const PostList: React.FC<Props> = ({ posts }) => {\n  const [filterPosts, setFilter] = useState('');\n  const [serchKeyword, setKeyword] = useState('');\n\n  const viewPosts = useMemo(() => {\n    const pattern = new RegExp(filterPosts, 'i');\n\n    return posts.filter(({body, title}) => pattern.test(body + title));\n  }, [posts, filterPosts]);\n\n  const setFilterPostsDebounce = useCallback(\n    debounce(setFilter, 1000),\n    [],\n  );\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setKeyword(event.target.value);\n    setFilterPostsDebounce(event.target.value);\n  };\n\n  return (\n    <>\n      <label className=\"search\">\n        <input\n          value={serchKeyword}\n          type=\"text\"\n          id=\"search-query\"\n          className=\"input\"\n          placeholder=\"Type to search\"\n          onChange={handleChange}\n        />\n        <button  className=\"button__subm\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg-inline--fa fa-search fa-w-16\" role=\"img\" aria-hidden=\"true\" viewBox=\"0 0 512 512\" focusable=\"false\" data-icon=\"search\" data-prefix=\"fas\"><path fill=\"currentColor\" d=\"M 505 442.7 L 405.3 343 c -4.5 -4.5 -10.6 -7 -17 -7 H 372 c 27.6 -35.3 44 -79.7 44 -128 C 416 93.1 322.9 0 208 0 S 0 93.1 0 208 s 93.1 208 208 208 c 48.3 0 92.7 -16.4 128 -44 v 16.3 c 0 6.4 2.5 12.5 7 17 l 99.7 99.7 c 9.4 9.4 24.6 9.4 33.9 0 l 28.3 -28.3 c 9.4 -9.4 9.4 -24.6 0.1 -34 Z M 208 336 c -70.7 0 -128 -57.2 -128 -128 c 0 -70.7 57.2 -128 128 -128 c 70.7 0 128 57.2 128 128 c 0 70.7 -57.2 128 -128 128 Z\" /></svg>\n        </button>\n      </label>\n      <p className=\"count__posts\">Post: {viewPosts.length}</p>\n      {viewPosts.map(post => (\n        <article className=\"article\" key={post.id}>\n          <div className=\"article__main-info\">\n            <Post\n              title={post.title}\n              body={post.body}\n              userInfo={post.user}\n              comments={post.comments}\n            />\n          </div>\n        </article>\n      ))}\n    </>\n  );\n}\n","const API_URL = 'https://jsonplaceholder.typicode.com/';\n\nexport const getPosts = () => {\n  return fetch(`${API_URL}posts`)\n    .then(response => response.json());\n};\n\nexport const getUsers = () => {\n  return fetch(`${API_URL}users`)\n    .then(response => response.json());\n};\n\nexport const getComments = () => {\n  return fetch(`${API_URL}comments`)\n    .then(response => response.json());\n};\n","import React, { useState } from 'react';\n\nimport './App.css';\nimport { PostList } from './components/PostList';\nimport { getComments, getUsers, getPosts } from './components/api';\nimport { IPost, IComment, IUser, IPostsUpdate } from './components/interface';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<IPostsUpdate[]>([]);\n  const [isLoaded, setLoaded] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const loadAllPosts = () => {\n    let preperedPosts: IPostsUpdate[] = [];\n\n    Promise.all([getPosts(), getComments(), getUsers()])\n      .then(([posts, comments, users]) => {\n        preperedPosts = posts.map((post: IPost) => ({\n          ...post,\n          comments: comments.filter((comment: IComment) => comment.postId === post.id),\n          user: users.find((user: IUser) => (\n            user.id === post.userId)),\n        }));\n      }).then(() => {\n        setPosts(preperedPosts);\n        setLoading(false);\n        setLoaded(true);\n      });\n  };\n\n  const handleLoading = () => {\n    setLoading(true);\n    setTimeout(() => {\n      loadAllPosts();\n    }, 1000);\n  };\n\n  return (\n    <body className=\"container\">\n      <h1 className=\"header\">Posts</h1>\n      {!isLoaded ? (\n        <button\n          type=\"button\"\n          className=\"button__load\"\n          onClick={handleLoading}>\n          {isLoading ? 'Loading...' : 'Load'}\n        </button>\n      ) : (\n          <PostList posts={posts} />\n        )}\n    </body>\n  )\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}