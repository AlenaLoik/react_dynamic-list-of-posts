{"version":3,"sources":["components/User.tsx","components/Comment.tsx","components/CommentList.tsx","components/Post.tsx","components/PostList.tsx","App.tsx","components/api.ts","index.tsx"],"names":["User","name","email","address","className","street","suite","city","Comment","body","CommentList","comments","map","comment","key","id","Post","title","userInfo","PostList","posts","post","user","App","useState","setPosts","vievPosts","setFilterPost","serchKeyword","setKeyword","isLoaded","setLoaded","isLoading","setLoading","startSearch","filterPost","filter","toLowerCase","includes","value","type","placeholder","onChange","e","target","onKeyUp","onClick","xmlns","role","aria-hidden","viewBox","focusable","data-icon","data-prefix","fill","d","length","setTimeout","preperedPosts","Promise","all","fetch","then","response","json","users","postId","find","userId","loadAllPosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b97cf31.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ntype Props = {\r\n  name: string;\r\n  email: string;\r\n  address: {\r\n    street: string;\r\n    suite: string;\r\n    city: string;\r\n  };\r\n}\r\n\r\nexport const User: React.FC<Props> = ({ name, email, address }) => (\r\n  <section className=\"userInfo\">\r\n    <h3>about autor:</h3>\r\n    <p><strong>{name}</strong></p>\r\n    <h4>email:</h4>\r\n    <p>{email}</p>\r\n    <h4>adress:</h4>\r\n    <p>\r\n      {address.street}\r\n      ,\r\n      {' '}\r\n      {' '}\r\n      {address.suite}\r\n      ,\r\n      {' '}\r\n      {address.city}\r\n    </p>\r\n  </section>\r\n);\r\n","import React from 'react';\r\n\r\ntype Props = {\r\n  name: string;\r\n  email: string;\r\n  body: string;\r\n}\r\n\r\nexport const Comment: React.FC<Props> = ({ name, email, body }) => (\r\n  <div className=\"comment\">\r\n    <h4>name: </h4>\r\n    <p>{name}</p>\r\n    <h4> email: </h4>\r\n    <p>{email}</p>\r\n    <section className=\"commet__text\">\r\n      <h4> comment: </h4>\r\n      <p>{body}</p>\r\n    </section>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport { Comment } from './Comment';\r\nimport { IComment } from './interface';\r\n\r\ntype Props = {\r\n  comments: IComment[];\r\n};\r\n\r\nexport const CommentList: React.FC<Props> = ({ comments }) => (\r\n  <section className=\"comments\">\r\n    <h3>Comments:</h3>\r\n    {comments.map(comment => (\r\n      <Comment {...comment} key={comment.id} />\r\n    ))}\r\n  </section>\r\n);\r\n","import React from 'react';\r\nimport { User } from './User';\r\nimport { CommentList } from './CommentList';\r\nimport { IUser, IComment } from './interface';\r\n\r\ntype Props = {\r\n  title: string;\r\n  body: string;\r\n  userInfo: IUser;\r\n  comments: IComment[];\r\n};\r\n\r\nexport const Post: React.FC<Props> = ({ title, body, userInfo, comments }) => (\r\n  <>\r\n    <div className=\"article__content\">\r\n      <h2 className=\"article__title\">{title}</h2>\r\n      <p className=\"article__text\">{body}</p>\r\n      <User {...userInfo} />\r\n    </div>\r\n    <div className=\"article__comments\">\r\n      <CommentList comments={comments} />\r\n    </div>\r\n  </>\r\n);\r\n","import React from 'react';\r\nimport { Post } from './Post';\r\nimport { IPostsUpdate } from './interface'\r\n\r\ntype Props = {\r\n  posts: IPostsUpdate[];\r\n};\r\n\r\nexport const PostList: React.FC<Props> = ({ posts }) => {\r\nreturn (\r\n  <>\r\n    {posts.map(post => (\r\n      <article className=\"article\" key={post.id}>\r\n        <div className=\"article__main-info\">\r\n          <Post\r\n            title={post.title}\r\n            body={post.body}\r\n            userInfo={post.user}\r\n            comments={post.comments}\r\n          />\r\n        </div>\r\n      </article>\r\n    ))}\r\n  </>\r\n);}\r\n","import React, { useState } from 'react';\r\n\r\nimport './App.css';\r\nimport { PostList } from './components/PostList';\r\nimport { getComments, getUsers, getPosts } from './components/api';\r\nimport { IPost, IComment, IUser, IPostsUpdate } from './components/interface';\r\n\r\nconst App: React.FC = () => {\r\n  const [posts, setPosts] = useState<IPostsUpdate[]>([]);\r\n  const [vievPosts, setFilterPost] = useState<IPostsUpdate[]>([]);\r\n  const [serchKeyword, setKeyword] = useState('');\r\n  const [isLoaded, setLoaded] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const loadAllPosts = () => {\r\n    let preperedPosts: IPostsUpdate[] = [];\r\n\r\n    Promise.all([getPosts(), getComments(), getUsers()])\r\n      .then(([posts, comments, users]) => {\r\n        preperedPosts = posts.map((post: IPost) => ({\r\n          ...post,\r\n          comments: comments.filter((comment: IComment) => comment.postId === post.id),\r\n          user: users.find((user: IUser) => (\r\n            user.id === post.userId)),\r\n        }));\r\n      }).then(() => {\r\n        setPosts(preperedPosts);\r\n        setFilterPost(preperedPosts);\r\n        setLoading(false);\r\n        setLoaded(true);\r\n      });\r\n  };\r\n\r\n  const handleLoading = () => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      loadAllPosts();\r\n    }, 1000);\r\n  };\r\n\r\n const startSearch = () => {\r\n  let filterPost = [...posts].filter(post => (\r\n    post.title.toLowerCase().includes(serchKeyword)\r\n    || post.body.toLowerCase().includes(serchKeyword)\r\n  ))\r\n\r\n  setFilterPost(filterPost);\r\n }\r\n\r\n  return (\r\n    <>\r\n      <h1>Posts</h1>\r\n      {!isLoaded ? (\r\n        <button\r\n          type=\"button\"\r\n          className=\"button__load\"\r\n          onClick={handleLoading}>\r\n          {isLoading ? 'Loading...' : 'Load'}\r\n        </button>\r\n      ) : (\r\n          <div className=\"control\">\r\n            <label className=\"search\">\r\n            <input\r\n                value = {serchKeyword}\r\n                type=\"search\"\r\n                id=\"search-query\"\r\n                className=\"input\"\r\n                placeholder=\"Type to search\"\r\n                onChange={(e) => {setKeyword(e.target.value)}}\r\n                onKeyUp={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    startSearch();\r\n                  }\r\n                }\r\n                }\r\n              />\r\n              <button onClick={startSearch} className=\"button__subm\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg-inline--fa fa-search fa-w-16\" role=\"img\" aria-hidden=\"true\" viewBox=\"0 0 512 512\" focusable=\"false\" data-icon=\"search\" data-prefix=\"fas\"><path fill=\"currentColor\" d=\"M 505 442.7 L 405.3 343 c -4.5 -4.5 -10.6 -7 -17 -7 H 372 c 27.6 -35.3 44 -79.7 44 -128 C 416 93.1 322.9 0 208 0 S 0 93.1 0 208 s 93.1 208 208 208 c 48.3 0 92.7 -16.4 128 -44 v 16.3 c 0 6.4 2.5 12.5 7 17 l 99.7 99.7 c 9.4 9.4 24.6 9.4 33.9 0 l 28.3 -28.3 c 9.4 -9.4 9.4 -24.6 0.1 -34 Z M 208 336 c -70.7 0 -128 -57.2 -128 -128 c 0 -70.7 57.2 -128 128 -128 c 70.7 0 128 57.2 128 128 c 0 70.7 -57.2 128 -128 128 Z\" /></svg>\r\n              </button>\r\n            </label>\r\n            <p className=\"count__posts\">Post: {vievPosts.length}</p>\r\n            <PostList posts={vievPosts} />\r\n          </div>\r\n\r\n        )}\r\n    </>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","export const getPosts = () => {\r\n  return fetch('https://jsonplaceholder.typicode.com/posts')\r\n    .then(response => response.json());\r\n};\r\n\r\nexport const getUsers = () => {\r\n  return fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json());\r\n};\r\n\r\nexport const getComments = () => {\r\n  return fetch('https://jsonplaceholder.typicode.com/comments')\r\n    .then(response => response.json());\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}